@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "Definir nova palavra-passe";
}

<h1 style="margin-top: 110px; color: #6610F2;">@ViewData["Title"]</h1>

<div class="row" style="display: flex; justify-content: center; align-items: center; margin-top: 50px;">
    <div class="col-md-4">
        <form method="post" id="recoverForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="text-danger" id="Danger">
                @if (ModelState.ContainsKey("Danger"))
                {
                    @ViewData.ModelState["Danger"].Errors.FirstOrDefault().ErrorMessage.ToString()
                    ;
                }
            </div>
            <input asp-for="Input.Code" type="hidden" />
            <h6 style="margin-top: 10px; color: #6610F2;">Email</h6>
            <div class="form-floating">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" id="EmailField" value=@if (TempData.ContainsKey("Email"))
                       {
                       @TempData["Email"]
;
                       } />
                <label asp-for="Input.Email" class="form-label"></label>
                <span asp-validation-for="Input.Email" class="text-danger" id="emailDanger">@if (ModelState.ContainsKey("EmailRed"))
                    {
                        @ViewData.ModelState["EmailRed"].Errors.FirstOrDefault().ErrorMessage.ToString();
                    }</span>
            </div>
            <h6 style="margin-top: 10px; color: #6610F2;">Nova Palavra-Passe</h6>
            <div class="form-floating">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" id="PasswordField" value=@if (TempData.ContainsKey("Password"))
                       {
                       @TempData["Password"];
                       } />
                <label asp-for="Input.Password" class="form-label"></label>
                <span asp-validation-for="Input.Password" class="text-danger" id="passDanger">@if (ViewData.ModelState.ContainsKey("PasswordRed"))
                    {
                        @ViewData.ModelState["PasswordRed"].Errors.FirstOrDefault().ErrorMessage.ToString()
                        ;
                    }</span>
            </div>
            <h6 style="margin-top: 10px; color: #6610F2;">Confirmar Palavra-Passe</h6>
            <div class="form-floating">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" id="ConfirmPasswordField" value=@if (TempData.ContainsKey("ConfirmPassword"))
               {
               @TempData["ConfirmPassword"]
;
               } />
                <label asp-for="Input.ConfirmPassword" class="form-label"></label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger" id="passConfirmDanger">@if (ViewData.ModelState.ContainsKey("ConfirmPasswordRed"))
                    {
                        @ViewData.ModelState["ConfirmPasswordRed"].Errors.FirstOrDefault().ErrorMessage.ToString();
                    }</span>
            </div>
            <asp:Button id="id="recoverFinalSubmit" style="margin-top: 100px;" type="submit" class="hidden"></asp:Button>
            <asp:Button id="recoverSubmit" class="second-phase btn btn-primary mr-5" onclick="RecoverFunction()">Definir palavra-passe</asp:Button>
        </form>
    </div>
</div>

<script>
    "use strict";
    function RecoverFunction() {
        let pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&_-])[A-Za-z\d@@$!%*?&_-]{6,}$/;
        let email = document.getElementById('EmailField').value;
        let password = document.getElementById('PasswordField').value;
        let confirmPassword = document.getElementById('ConfirmPasswordField').value;
        if (!email.includes("@@")) {
            ResetDanger();
            document.getElementById('emailDanger').innerHTML = "O email é inválido";
            console.log("Email Wrong");
            return
        }
        if (!pattern.test(password)) {
            ResetDanger();
            document.getElementById('passDanger').innerHTML = "A palavra-passe deve conter, pelo menos 6 caracteres, dos quais têm que ter um número [0-9],uma letra minuscula [a-z], uma letra maiuscula [A-Z] e um caracter especial [@@&?%]";
            console.log("Password Wrong");
            return
        }
        if (!(password === confirmPassword)) {
            ResetDanger();
            document.getElementById('passConfirmDanger').innerHTML = "A palavra-passe e a confirmação de palavra-passe não são iguais.";
            console.log("Password and ConfirmPassword Different");
            return
        }
        document.getElementById("recoverForm").submit();
    }

    function ResetDanger() {
        document.getElementById('Danger').innerHTML = "";
        document.getElementById('passConfirmDanger').innerHTML = "";
        document.getElementById('passDanger').innerHTML = "";
        document.getElementById('emailDanger').innerHTML = "";
    }
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
